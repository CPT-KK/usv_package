/** CAN message encoder/decoder: automatically generated - do not edit
  * Generated by dbcc: See https://github.com/howerj/dbcc */
#ifndef CAN_H
#define CAN_H

/* If the contents of this file have caused breaking changes for you, you could try using
   an older version of the generator. You can specify this on the command line with
   the -n option. */
#define DBCC_GENERATOR_VERSION (3)

#include <stdint.h>
#include <stdio.h>

#ifdef __cplusplus
extern "C" { 
#endif

#ifndef PREPACK
#define PREPACK
#endif

#ifndef POSTPACK
#define POSTPACK
#endif

#ifndef DBCC_TIME_STAMP
#define DBCC_TIME_STAMP
typedef uint32_t dbcc_time_stamp_t; /* Time stamp for message; you decide on units */
#endif

#ifndef DBCC_STATUS_ENUM
#define DBCC_STATUS_ENUM
typedef enum {
	DBCC_SIG_STAT_UNINITIALIZED_E = 0, /* Message never sent/received */
	DBCC_SIG_STAT_OK_E            = 1, /* Message ok */
	DBCC_SIG_STAT_ERROR_E         = 2, /* Encode/Decode/Timestamp/Any error */
} dbcc_signal_status_e;
#endif

#define CAN_ID_MAG_OUTPUT (1413) /* 0x585 */
#define CAN_ID_MOTOR_STATE (2565) /* 0xa05 */
#define CAN_ID_BATT_1_OVERALL_STATUS (412106753) /* 0x18904001 */
#define CAN_ID_BATT_2_OVERALL_STATUS (412106754) /* 0x18904002 */
#define CAN_ID_BATT_3_OVERALL_STATUS (412106755) /* 0x18904003 */
#define CAN_ID_BATT_4_OVERALL_STATUS (412106756) /* 0x18904004 */
#define CAN_ID_BATT_1_CELL_STATUS (412172289) /* 0x18914001 */
#define CAN_ID_BATT_2_CELL_STATUS (412172290) /* 0x18914002 */
#define CAN_ID_BATT_3_CELL_STATUS (412172291) /* 0x18914003 */
#define CAN_ID_BATT_4_CELL_STATUS (412172292) /* 0x18914004 */

/* Compass sensor output */
typedef PREPACK struct {
	uint16_t x; /* scaling 0.0, offset -3.5, units rad  */
	uint16_t y; /* scaling 0.0, offset -3.5, units rad  */
	uint16_t z; /* scaling 0.0, offset -3.5, units rad  */
} POSTPACK can_0x585_mag_output_t;

typedef PREPACK struct {
	uint16_t engine_speed; /* scaling 0.2, offset 0.0, units RPM  */
	uint8_t motor_index; /* scaling 1.0, offset 0.0, units none  */
	uint8_t valid_check; /* scaling 1.0, offset 0.0, units none  */
	uint8_t motor_status; /* scaling 1.0, offset 0.0, units none  */
	uint8_t motor_torque; /* scaling 1.0, offset 0.0, units none  */
	uint8_t motor_throttle; /* scaling 1.0, offset 0.0, units none  */
	uint8_t motor_gear; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0xa05_motor_state_t;

typedef PREPACK struct {
	uint16_t cumulative_voltage; /* scaling 0.1, offset 0.0, units V  */
	uint16_t collecting_voltage; /* scaling 0.1, offset 0.0, units V  */
	uint16_t current; /* scaling 0.1, offset -3000.0, units A  */
	uint16_t soc; /* scaling 0.1, offset 0.0, units %  */
} POSTPACK can_0x18904001_batt_1_overall_status_t;

typedef PREPACK struct {
	uint16_t cumulative_voltage; /* scaling 0.1, offset 0.0, units V  */
	uint16_t collecting_voltage; /* scaling 0.1, offset 0.0, units V  */
	uint16_t current; /* scaling 0.1, offset -3000.0, units A  */
	uint16_t soc; /* scaling 0.1, offset 0.0, units %  */
} POSTPACK can_0x18904002_batt_2_overall_status_t;

typedef PREPACK struct {
	uint16_t cumulative_voltage; /* scaling 0.1, offset 0.0, units V  */
	uint16_t collecting_voltage; /* scaling 0.1, offset 0.0, units V  */
	uint16_t current; /* scaling 0.1, offset -3000.0, units A  */
	uint16_t soc; /* scaling 0.1, offset 0.0, units %  */
} POSTPACK can_0x18904003_batt_3_overall_status_t;

typedef PREPACK struct {
	uint16_t cumulative_voltage; /* scaling 0.1, offset 0.0, units V  */
	uint16_t collecting_voltage; /* scaling 0.1, offset 0.0, units V  */
	uint16_t current; /* scaling 0.1, offset -3000.0, units A  */
	uint16_t soc; /* scaling 0.1, offset 0.0, units %  */
} POSTPACK can_0x18904004_batt_4_overall_status_t;

typedef PREPACK struct {
	uint16_t max_volt; /* scaling 0.0, offset 0.0, units V  */
	uint16_t min_volt; /* scaling 0.0, offset 0.0, units V  */
	uint8_t max_volt_id; /* scaling 1.0, offset 0.0, units none  */
	uint8_t min_volt_id; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x18914001_batt_1_cell_status_t;

typedef PREPACK struct {
	uint16_t max_volt; /* scaling 0.0, offset 0.0, units V  */
	uint16_t min_volt; /* scaling 0.0, offset 0.0, units V  */
	uint8_t max_volt_id; /* scaling 1.0, offset 0.0, units none  */
	uint8_t min_volt_id; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x18914002_batt_2_cell_status_t;

typedef PREPACK struct {
	uint16_t max_volt; /* scaling 0.0, offset 0.0, units V  */
	uint16_t min_volt; /* scaling 0.0, offset 0.0, units V  */
	uint8_t max_volt_id; /* scaling 1.0, offset 0.0, units none  */
	uint8_t min_volt_id; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x18914003_batt_3_cell_status_t;

typedef PREPACK struct {
	uint16_t max_volt; /* scaling 0.0, offset 0.0, units V  */
	uint16_t min_volt; /* scaling 0.0, offset 0.0, units V  */
	uint8_t max_volt_id; /* scaling 1.0, offset 0.0, units none  */
	uint8_t min_volt_id; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x18914004_batt_4_cell_status_t;

typedef PREPACK struct {
	dbcc_time_stamp_t can_0x585_mag_output_time_stamp_rx;
	dbcc_time_stamp_t can_0xa05_motor_state_time_stamp_rx;
	dbcc_time_stamp_t can_0x18904001_batt_1_overall_status_time_stamp_rx;
	dbcc_time_stamp_t can_0x18904002_batt_2_overall_status_time_stamp_rx;
	dbcc_time_stamp_t can_0x18904003_batt_3_overall_status_time_stamp_rx;
	dbcc_time_stamp_t can_0x18904004_batt_4_overall_status_time_stamp_rx;
	dbcc_time_stamp_t can_0x18914001_batt_1_cell_status_time_stamp_rx;
	dbcc_time_stamp_t can_0x18914002_batt_2_cell_status_time_stamp_rx;
	dbcc_time_stamp_t can_0x18914003_batt_3_cell_status_time_stamp_rx;
	dbcc_time_stamp_t can_0x18914004_batt_4_cell_status_time_stamp_rx;
	unsigned can_0x585_mag_output_status : 2;
	unsigned can_0x585_mag_output_tx : 1;
	unsigned can_0x585_mag_output_rx : 1;
	unsigned can_0xa05_motor_state_status : 2;
	unsigned can_0xa05_motor_state_tx : 1;
	unsigned can_0xa05_motor_state_rx : 1;
	unsigned can_0x18904001_batt_1_overall_status_status : 2;
	unsigned can_0x18904001_batt_1_overall_status_tx : 1;
	unsigned can_0x18904001_batt_1_overall_status_rx : 1;
	unsigned can_0x18904002_batt_2_overall_status_status : 2;
	unsigned can_0x18904002_batt_2_overall_status_tx : 1;
	unsigned can_0x18904002_batt_2_overall_status_rx : 1;
	unsigned can_0x18904003_batt_3_overall_status_status : 2;
	unsigned can_0x18904003_batt_3_overall_status_tx : 1;
	unsigned can_0x18904003_batt_3_overall_status_rx : 1;
	unsigned can_0x18904004_batt_4_overall_status_status : 2;
	unsigned can_0x18904004_batt_4_overall_status_tx : 1;
	unsigned can_0x18904004_batt_4_overall_status_rx : 1;
	unsigned can_0x18914001_batt_1_cell_status_status : 2;
	unsigned can_0x18914001_batt_1_cell_status_tx : 1;
	unsigned can_0x18914001_batt_1_cell_status_rx : 1;
	unsigned can_0x18914002_batt_2_cell_status_status : 2;
	unsigned can_0x18914002_batt_2_cell_status_tx : 1;
	unsigned can_0x18914002_batt_2_cell_status_rx : 1;
	unsigned can_0x18914003_batt_3_cell_status_status : 2;
	unsigned can_0x18914003_batt_3_cell_status_tx : 1;
	unsigned can_0x18914003_batt_3_cell_status_rx : 1;
	unsigned can_0x18914004_batt_4_cell_status_status : 2;
	unsigned can_0x18914004_batt_4_cell_status_tx : 1;
	unsigned can_0x18914004_batt_4_cell_status_rx : 1;
	can_0x585_mag_output_t can_0x585_mag_output;
	can_0xa05_motor_state_t can_0xa05_motor_state;
	can_0x18904001_batt_1_overall_status_t can_0x18904001_batt_1_overall_status;
	can_0x18904002_batt_2_overall_status_t can_0x18904002_batt_2_overall_status;
	can_0x18904003_batt_3_overall_status_t can_0x18904003_batt_3_overall_status;
	can_0x18904004_batt_4_overall_status_t can_0x18904004_batt_4_overall_status;
	can_0x18914001_batt_1_cell_status_t can_0x18914001_batt_1_cell_status;
	can_0x18914002_batt_2_cell_status_t can_0x18914002_batt_2_cell_status;
	can_0x18914003_batt_3_cell_status_t can_0x18914003_batt_3_cell_status;
	can_0x18914004_batt_4_cell_status_t can_0x18914004_batt_4_cell_status;
} POSTPACK can_obj_can_h_t;

int unpack_message(can_obj_can_h_t *o, const unsigned long id, uint64_t data, uint8_t dlc, dbcc_time_stamp_t time_stamp);
int pack_message(can_obj_can_h_t *o, const unsigned long id, uint64_t *data);
int print_message(const can_obj_can_h_t *o, const unsigned long id, FILE *output);

int decode_can_0x585_x(const can_obj_can_h_t *o, double *out);
int encode_can_0x585_x(can_obj_can_h_t *o, double in);
int decode_can_0x585_y(const can_obj_can_h_t *o, double *out);
int encode_can_0x585_y(can_obj_can_h_t *o, double in);
int decode_can_0x585_z(const can_obj_can_h_t *o, double *out);
int encode_can_0x585_z(can_obj_can_h_t *o, double in);


int decode_can_0xa05_engine_speed(const can_obj_can_h_t *o, double *out);
int encode_can_0xa05_engine_speed(can_obj_can_h_t *o, double in);
int decode_can_0xa05_motor_index(const can_obj_can_h_t *o, uint8_t *out);
int encode_can_0xa05_motor_index(can_obj_can_h_t *o, uint8_t in);
int decode_can_0xa05_valid_check(const can_obj_can_h_t *o, uint8_t *out);
int encode_can_0xa05_valid_check(can_obj_can_h_t *o, uint8_t in);
int decode_can_0xa05_motor_status(const can_obj_can_h_t *o, uint8_t *out);
int encode_can_0xa05_motor_status(can_obj_can_h_t *o, uint8_t in);
int decode_can_0xa05_motor_torque(const can_obj_can_h_t *o, uint8_t *out);
int encode_can_0xa05_motor_torque(can_obj_can_h_t *o, uint8_t in);
int decode_can_0xa05_motor_throttle(const can_obj_can_h_t *o, uint8_t *out);
int encode_can_0xa05_motor_throttle(can_obj_can_h_t *o, uint8_t in);
int decode_can_0xa05_motor_gear(const can_obj_can_h_t *o, uint8_t *out);
int encode_can_0xa05_motor_gear(can_obj_can_h_t *o, uint8_t in);


int decode_can_0x18904001_cumulative_voltage(const can_obj_can_h_t *o, double *out);
int encode_can_0x18904001_cumulative_voltage(can_obj_can_h_t *o, double in);
int decode_can_0x18904001_collecting_voltage(const can_obj_can_h_t *o, double *out);
int encode_can_0x18904001_collecting_voltage(can_obj_can_h_t *o, double in);
int decode_can_0x18904001_current(const can_obj_can_h_t *o, double *out);
int encode_can_0x18904001_current(can_obj_can_h_t *o, double in);
int decode_can_0x18904001_soc(const can_obj_can_h_t *o, double *out);
int encode_can_0x18904001_soc(can_obj_can_h_t *o, double in);


int decode_can_0x18904002_cumulative_voltage(const can_obj_can_h_t *o, double *out);
int encode_can_0x18904002_cumulative_voltage(can_obj_can_h_t *o, double in);
int decode_can_0x18904002_collecting_voltage(const can_obj_can_h_t *o, double *out);
int encode_can_0x18904002_collecting_voltage(can_obj_can_h_t *o, double in);
int decode_can_0x18904002_current(const can_obj_can_h_t *o, double *out);
int encode_can_0x18904002_current(can_obj_can_h_t *o, double in);
int decode_can_0x18904002_soc(const can_obj_can_h_t *o, double *out);
int encode_can_0x18904002_soc(can_obj_can_h_t *o, double in);


int decode_can_0x18904003_cumulative_voltage(const can_obj_can_h_t *o, double *out);
int encode_can_0x18904003_cumulative_voltage(can_obj_can_h_t *o, double in);
int decode_can_0x18904003_collecting_voltage(const can_obj_can_h_t *o, double *out);
int encode_can_0x18904003_collecting_voltage(can_obj_can_h_t *o, double in);
int decode_can_0x18904003_current(const can_obj_can_h_t *o, double *out);
int encode_can_0x18904003_current(can_obj_can_h_t *o, double in);
int decode_can_0x18904003_soc(const can_obj_can_h_t *o, double *out);
int encode_can_0x18904003_soc(can_obj_can_h_t *o, double in);


int decode_can_0x18904004_cumulative_voltage(const can_obj_can_h_t *o, double *out);
int encode_can_0x18904004_cumulative_voltage(can_obj_can_h_t *o, double in);
int decode_can_0x18904004_collecting_voltage(const can_obj_can_h_t *o, double *out);
int encode_can_0x18904004_collecting_voltage(can_obj_can_h_t *o, double in);
int decode_can_0x18904004_current(const can_obj_can_h_t *o, double *out);
int encode_can_0x18904004_current(can_obj_can_h_t *o, double in);
int decode_can_0x18904004_soc(const can_obj_can_h_t *o, double *out);
int encode_can_0x18904004_soc(can_obj_can_h_t *o, double in);


int decode_can_0x18914001_max_volt(const can_obj_can_h_t *o, double *out);
int encode_can_0x18914001_max_volt(can_obj_can_h_t *o, double in);
int decode_can_0x18914001_min_volt(const can_obj_can_h_t *o, double *out);
int encode_can_0x18914001_min_volt(can_obj_can_h_t *o, double in);
int decode_can_0x18914001_max_volt_id(const can_obj_can_h_t *o, uint8_t *out);
int encode_can_0x18914001_max_volt_id(can_obj_can_h_t *o, uint8_t in);
int decode_can_0x18914001_min_volt_id(const can_obj_can_h_t *o, uint8_t *out);
int encode_can_0x18914001_min_volt_id(can_obj_can_h_t *o, uint8_t in);


int decode_can_0x18914002_max_volt(const can_obj_can_h_t *o, double *out);
int encode_can_0x18914002_max_volt(can_obj_can_h_t *o, double in);
int decode_can_0x18914002_min_volt(const can_obj_can_h_t *o, double *out);
int encode_can_0x18914002_min_volt(can_obj_can_h_t *o, double in);
int decode_can_0x18914002_max_volt_id(const can_obj_can_h_t *o, uint8_t *out);
int encode_can_0x18914002_max_volt_id(can_obj_can_h_t *o, uint8_t in);
int decode_can_0x18914002_min_volt_id(const can_obj_can_h_t *o, uint8_t *out);
int encode_can_0x18914002_min_volt_id(can_obj_can_h_t *o, uint8_t in);


int decode_can_0x18914003_max_volt(const can_obj_can_h_t *o, double *out);
int encode_can_0x18914003_max_volt(can_obj_can_h_t *o, double in);
int decode_can_0x18914003_min_volt(const can_obj_can_h_t *o, double *out);
int encode_can_0x18914003_min_volt(can_obj_can_h_t *o, double in);
int decode_can_0x18914003_max_volt_id(const can_obj_can_h_t *o, uint8_t *out);
int encode_can_0x18914003_max_volt_id(can_obj_can_h_t *o, uint8_t in);
int decode_can_0x18914003_min_volt_id(const can_obj_can_h_t *o, uint8_t *out);
int encode_can_0x18914003_min_volt_id(can_obj_can_h_t *o, uint8_t in);


int decode_can_0x18914004_max_volt(const can_obj_can_h_t *o, double *out);
int encode_can_0x18914004_max_volt(can_obj_can_h_t *o, double in);
int decode_can_0x18914004_min_volt(const can_obj_can_h_t *o, double *out);
int encode_can_0x18914004_min_volt(can_obj_can_h_t *o, double in);
int decode_can_0x18914004_max_volt_id(const can_obj_can_h_t *o, uint8_t *out);
int encode_can_0x18914004_max_volt_id(can_obj_can_h_t *o, uint8_t in);
int decode_can_0x18914004_min_volt_id(const can_obj_can_h_t *o, uint8_t *out);
int encode_can_0x18914004_min_volt_id(can_obj_can_h_t *o, uint8_t in);


#ifdef __cplusplus
} 
#endif

#endif
